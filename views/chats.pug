//
   Created by admin on 6/1/2017.
html
    head
        title= "Chats"
        meta(property="og:title" content="ProgConf Statistic")
        meta(property="og:image" content="http://progconfbot.herokuapp.com/images/bill.png")
        meta(property="og:description" content="2ch /pr progConf bot")
        meta(property="og:type" content="website")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.3.0/vue.js")
        script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.16.2/axios.min.js")
    body
        div(id="app")
            div Total messages: {{total.messagesTotal}}
            div Total stickers: {{total.stickersTotal}}
            div Today messages: {{today.todayMessagesTotal}}({{today.messagesDirection}}{{today.messagePercentage}}% of {{today.yesterdayMessagesTotal}})
            div Today stickers: {{today.todayStickersTotal}}({{today.stickersDirection}}{{today.stickerPercentage}}% of {{today.yesterdayStickersTotal}})
            chart(label='Messages'
                    api-url=`http://progconfbot.herokuapp.com/api/m/${chatId}`
                    chart-id="messages"
                    background-color='rgba(255, 99, 132, 0.2)'
                    border-color='rgba(255,99,132,1)'
                    border-width=1)
            chart(label='Stickers'
                    api-url=`http://progconfbot.herokuapp.com/api/s/${chatId}`
                    chart-id="stickers"
                    background-color='rgba(152, 99, 132, 0.2)'
                    border-color='rgba(152,99,132,1)'
                    border-width=1)
            bar(label='Messages'
                    api-url=`http://progconfbot.herokuapp.com/api/top/m/${chatId}`
                    chart-id="top-messages")

            bar(label='Stickers'
                    api-url=`http://progconfbot.herokuapp.com/api/top/s/${chatId}`
                    chart-id="top-stickers")

        script.
            Vue.component('chart', {
                template: '<canvas :id=chartId></canvas>',
                props: ['chartdata', 'label', 'apiUrl', 'chartId', 'backgroundColor', 'borderColor', 'borderWidth'],
                data: function () {
                    return {localchartdata: this.chartdata}
                },
                methods: {
                    load: function () {
                        var data = this.localchartdata.data;
                        var ctx = document.getElementById(this.chartId).getContext('2d');
                        var lineChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: data.map(function (item) {
                                    return item.day;
                                }),
                                datasets: [{
                                    label: this.label,
                                    data: data.map(function (item) {
                                        return item.count;
                                    }),
                                    backgroundColor: this.backgroundColor,
                                    borderColor: this.borderColor,
                                    borderWidth: this.borderWidth
                                }]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });
                    }
                },
                mounted: function(){
                    axios
                        .get(this.apiUrl)
                        .then(({data}) => {
                            this.localchartdata = data;
                            this.load();
                        })
                        .
                        catch((err) => {console.log(err)
                    });
                }
            });


            Vue.component('bar', {
                template: '<canvas :id=chartId></canvas>',
                props: ['chartdata', 'label', 'apiUrl', 'chartId'],
                data: function () {
                    return {localchartdata: this.chartdata}
                },
                methods: {
                    load: function () {
                        var data = this.localchartdata.data;
                        var ctx = document.getElementById(this.chartId).getContext('2d');
                        var lineChart = new Chart(ctx, {
                            type: 'horizontalBar',
                            data: {
                                labels: data.map(function (item) {
                                    return `${item.firstName == null ? '' : item.firstName} ${item.lastName == null ? '' : item.lastName}`;
                                }),
                                datasets: [{
                                    label: this.label,
                                    data: data.map(function (item) {
                                        return item.count;
                                    }),
                                    backgroundColor: data.map(function (item) {
                                        var letters = '0123456789ABCDEF'.split('');
                                        var color = '#';
                                        for (var i = 0; i < 6; i++) {
                                            color += letters[Math.floor(Math.random() * 16)];
                                        }
                                        return color;
                                    })
                                }]
                            }
                        });
                    }
                },
                mounted: function () {
                    axios
                        .get(this.apiUrl)
                        .then(({data}) => {
                        this.localchartdata = data;
                    this.load();
                })
                    .
                    catch((err) => {console.log(err)
                })
                    ;
                }
            });


            var app = new Vue({
                el: "#app",
                data: {
                    today: {},
                    total: {},
                    chatId: !{JSON.stringify(chatId)}
                },
                components: {
                    messagesChart: {

                    }
                },

                methods: {
                    updateToday: function () {
                        axios
                            .get(`http://progconfbot.herokuapp.com/api/today/${this.chatId}`)
                            .then(({data}) => {
                                this.today = data;
                            })
                            .
                            catch((err) => {console.log(err)});
                    },
                    updateTotal: function () {
                        axios
                            .get(`http://progconfbot.herokuapp.com/api/total/${this.chatId}`)
                            .then(({data}) => {
                            this.total = data;
                            })
                            .
                            catch((err) => {console.log(err)});
                    }
                },
                created: function(){
                    this.updateToday();
                    this.updateTotal();
                }
            });